app :
 value : 'greeting from config server'
spring:
 application:
  name: configuration
 datasource:
  url: jdbc:postgresql://localhost:5432/postgres?currentSchema=mystays
  username: postgres
  password: manager123
  driverClassName: org.postgresql.Driver
  initialize: true
 jpa:
  show-sql: true
  database: POSTGRESQL
  hibernate:
   ddl-auto: update
  properties:
   hibernate:
    default_schema: mystays
    dialect: org.hibernate.dialect.PostgreSQL81Dialect
 sql:
  init:
   platform: postgres
   continue-on-error: true
   mode: always

# cloud:
#  vault:
#   kv:
#    enabled: 'true'
#   scheme: http
#   authentication: TOKEN
#   token: 00000000-0000-0000-0000-000000000000
#   application-name: HOTEL-SEARCH-API

eureka:
 instance:
  prefer-ip-address: true
  status-page-url-path: /actuator/info
  health-check-url-path: /actuator/health
  instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
 client:
  register-with-eureka: true
  fetch-registry: true
  service-url:
   defaultZone: http://localhost:8761/eureka/

#quarkus:
# datasource:
#  username: postgres
#  password: manager123
#  db-kind: POSTGRESQL
#  jdbc:
#   url: jdbc:postgresql://localhost:5432/postgres?currentSchema=mystays
# hibernate-orm:
#  dialect: org.hibernate.dialect.PostgreSQL81Dialect
#  log:
#   sql: 'true'
#  database:
#   generation: update
# http:
#  port: '8089'


#grpc:
# client:
#  hotel-availibility-pad:
#   address: 'discovery:///hotel-availibility-pad'
#   enableKeepAlive: true
#   keepAliveWithoutCalls: true
#   negotiationType: plaintext
#  hotel-details-pad:
#   address: 'discovery:///hotel-details-pad'
#   enableKeepAlive: true
#   keepAliveWithoutCalls: true
#   negotiationType: plaintext


